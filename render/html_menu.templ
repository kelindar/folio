package render

import "github.com/kelindar/folio"

templ hxNavigation(rctx *Context, namespaces []folio.Object) {
	<nav class="bg-white border-gray-200 dark:bg-gray-900 mb-8 shadow-sm">
		<div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
			@hxNamespace(rctx, namespaces)
			<button
				data-collapse-toggle="navbar-default"
				type="button"
				class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
				aria-controls="navbar-default"
				aria-expanded="false"
			>
				<span class="sr-only">Open main menu</span>
				<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
					<path
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M1 1h15M1 7h15M1 13h15"
					></path>
				</svg>
			</button>
			<div class="hidden w-full md:block md:w-auto" id="navbar-default">
				<ul
					class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
				>
					for typ := range rctx.Registry.Types() {
						@hxLink(typ.Icon, typ.Plural, templ.SafeURL("/"+typ.Kind.String()))
					}
				</ul>
			</div>
		</div>
	</nav>
}

templ hxNamespace(rctx *Context, namespaces []folio.Object) {
	<div class="w-56">
		<form
			id="namespace-select"
			hx-trigger="uk-select:input delay:100ms"
			hx-post={ "/search/" + rctx.Kind.String() }
			hx-target="#list-content"
			hx-swap="outerHTML"
			hx-ext="obj-enc"
		>
			<uk-select
				name="search_namespace"
				id="search_namespace"
				searchable?={ len(namespaces) > 5 }
				uk-cloak
			>
				<option value="*" selected>All</option>
				for _, ns := range namespaces {
					<option
						value={ StringOf(ns, "Name") }
					>{ TitleOf(ns) }</option>
				}
			</uk-select>
		</form>
	</div>
}

// hxLink renders a link with an icon
templ hxLink(icon, name string, url templ.SafeURL) {
	<li class="text-center">
		<a
			href={ url }
			class="block w-16 place-content-center py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
			aria-current="page"
		>
			<div class="inline-block">
				<uk-icon icon={ icon }></uk-icon>
			</div>
			<div class="text-xxs font-bold">{ name }</div>
		</a>
	</li>
}
