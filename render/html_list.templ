package render

import (
	"fmt"
	"github.com/kelindar/folio"
	"github.com/kelindar/folio/convert"
	"iter"
)

templ hxList(rctx *Context, items iter.Seq[folio.Object]) {
	<div class="mx-auto max-w-screen-xl px-4 lg:px-12">
		<div class="bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
			<div class="flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4">
				<div class="w-full md:w-1/2">
					@hxSearchBar()
				</div>
				<div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
					@hxCreateButton(rctx.Kind)
				</div>
			</div>
			<div class="overflow-x-auto">
				<h2 class="text-3xl font-extrabold leading-none tracking-tight text-gray-900 dark:text-white p-4">
					<span class="underline underline-offset-3 decoration-6 decoration-blue-400">Manage Users</span>
				</h2>
				@hxListContent(rctx, items)
			</div>
			<nav
				class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4"
				aria-label="Table navigation"
			>
				<span class="text-sm font-normal text-gray-500 dark:text-gray-400">
					Showing
					<span class="font-semibold text-gray-900 dark:text-white">1-10</span>
					of
					<span class="font-semibold text-gray-900 dark:text-white">1000</span>
				</span>
				<ul class="inline-flex items-stretch -space-x-px">
					<li>
						<a
							href="#"
							class="flex items-center justify-center h-full py-1.5 px-3 ml-0 text-gray-500 bg-white rounded-l-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>
							<span class="sr-only">Previous</span>
							<svg
								class="w-5 h-5"
								aria-hidden="true"
								fill="currentColor"
								viewbox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fill-rule="evenodd"
									d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
									clip-rule="evenodd"
								></path>
							</svg>
						</a>
					</li>
					<li>
						<a
							href="#"
							class="flex items-center justify-center text-sm py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>1</a>
					</li>
					<li>
						<a
							href="#"
							class="flex items-center justify-center text-sm py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>2</a>
					</li>
					<li>
						<a
							href="#"
							aria-current="page"
							class="flex items-center justify-center text-sm z-10 py-2 px-3 leading-tight text-primary-600 bg-primary-50 border border-primary-300 hover:bg-primary-100 hover:text-primary-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white"
						>3</a>
					</li>
					<li>
						<a
							href="#"
							class="flex items-center justify-center text-sm py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>...</a>
					</li>
					<li>
						<a
							href="#"
							class="flex items-center justify-center text-sm py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>100</a>
					</li>
					<li>
						<a
							href="#"
							class="flex items-center justify-center h-full py-1.5 px-3 leading-tight text-gray-500 bg-white rounded-r-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
						>
							<span class="sr-only">Next</span>
							<svg
								class="w-5 h-5"
								aria-hidden="true"
								fill="currentColor"
								viewbox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fill-rule="evenodd"
									d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
									clip-rule="evenodd"
								></path>
							</svg>
						</a>
					</li>
				</ul>
			</nav>
		</div>
	</div>
}

templ hxListHeading() {
	<div class="border-b border-gray-200 pb-5 sm:flex sm:items-center sm:justify-between">
		<h3 class="text-base font-semibold leading-6 text-gray-900">Job Postings</h3>
		<div class="mt-3 sm:ml-4 sm:mt-0">
			<label for="mobile-search-candidate" class="sr-only">Search</label>
			<label for="desktop-search-candidate" class="sr-only">Search</label>
			<div class="flex rounded-md shadow-sm">
				<form hx-post={ "/search" } hx-target="#list-content" hx-swap="outerHTML" hx-ext="json-enc">
					<div class="relative flex-grow focus-within:z-10">
						<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
							<svg class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
								<path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd"></path>
							</svg>
						</div>
						<input type="text" name="mobile-search-candidate" id="mobile-search-candidate" class="block w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:hidden" placeholder="Search"/>
						<input type="text" name="desktop-search-candidate" id="desktop-search-candidate" class="hidden w-full rounded-none rounded-l-md border-0 py-1.5 pl-10 text-sm leading-6 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:block" placeholder="Search candidates"/>
					</div>
				</form>
				<button type="button" class="relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
					<svg class="-ml-0.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M2 3.75A.75.75 0 012.75 3h11.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zM2 7.5a.75.75 0 01.75-.75h6.365a.75.75 0 010 1.5H2.75A.75.75 0 012 7.5zM14 7a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02l-1.95-2.1v6.59a.75.75 0 01-1.5 0V9.66l-1.95 2.1a.75.75 0 11-1.1-1.02l3.25-3.5A.75.75 0 0114 7zM2 11.25a.75.75 0 01.75-.75H7A.75.75 0 017 12H2.75a.75.75 0 01-.75-.75z" clip-rule="evenodd"></path>
					</svg>
					Sort
					<svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path>
					</svg>
				</button>
			</div>
		</div>
	</div>
}

templ hxSearchBar() {
	<form hx-post={ "/search" } hx-target="#list-content" hx-swap="outerHTML" hx-ext="json-enc" class="flex items-center">
		<label for="simple-search" class="sr-only">Search</label>
		<div class="relative w-full">
			<div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
				<svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
					></path>
				</svg>
			</div>
			<input
				type="text"
				id="query"
				name="query"
				class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
				placeholder="Search"
			/>
		</div>
	</form>
}

templ hxListContent(rctx *Context, elements iter.Seq[folio.Object]) {
	<ul id="list-content" role="list" class="divide-y divide-gray-100">
		for v := range elements {
			<li id={ v.URN().ID }>
				@hxListElementRow(v)
			</li>
		}
	</ul>
}

templ hxListElementUpdate(rctx *Context, v folio.Object) {
	<li id={ v.URN().ID } hx-swap-oob="true">
		@hxListElementRow(v)
	</li>
	@hxFormContent(rctx, v)
}

templ hxListElementDelete(urn folio.URN) {
	<li id={ urn.ID } hx-swap-oob="delete"></li>
	@hxNotification("Successfully Deleted",
		fmt.Sprintf("The object with ID %s has been successfully deleted.", urn),
	)
}

templ hxListElementCreate(rctx *Context, v folio.Object) {
	<ul id="list-content" hx-swap-oob="beforeend" role="list" class="divide-y divide-gray-100">
		<li id={ v.URN().ID }>
			@hxListElementRow(v)
		</li>
	</ul>
	@hxFormContent(rctx, v)
}

templ hxListElementRow(v folio.Object) {
	<div
		class="flex justify-between gap-x-2 py-2 px-4 bg-white hover:bg-slate-100 hover:bg-opacity-50 hover:text-white transition duration-300"
		hx-on:click="document.getElementById('drawer-toggle').checked = true"
		hx-target="#drawer"
		hx-get={ "/view/" + v.URN().String() }
	>
		<div class="flex min-w-0 gap-x-4">
			if StringOf(v, "Icon") != "" {
				<img class="h-12 w-12 flex-none rounded-full bg-gray-50" src={ StringOf(v, "Icon") } alt=""/>
			}
			<div class="min-w-0 flex-auto ">
				<p class="text-sm font-semibold leading-6 text-gray-900 whitespace-nowrap truncate">
					{ StringOf(v, "Title") }
					for _, tag := range ListOf(v, "Badges") {
						<span class="bg-slate-100 text-slate-800 text-xxs font-medium me-1 px-2.5 py-0.5 rounded dark:bg-slate-700 dark:text-slate-300">
							{ tag }
						</span>
					}
				</p>
				<p class="mt-1 truncate text-xs leading-5 text-gray-500">{ StringOf(v, "Subtitle") }</p>
			</div>
		</div>
		<div class="hidden shrink-0 sm:flex sm:flex-col sm:items-end gap-y-0.5">
			@hxState(StringOf(v, "Status"))
			<span class="mt-1 truncate text-xs leading-5 text-gray-500 px-2">
				@timedAt(v.Updated())
			</span>
		</div>
	</div>
}

templ hxState(value string) {
	<span class={ "bg-" + convert.Color(value) + "-100 text-" + convert.Color(value) + "-800 text-sm font-medium me-2 px-2 py-0.5 rounded" }>{ value }</span>
}

templ hxCreateButton(kind folio.Kind) {
	<button
		class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
		hx-on:click="document.getElementById('drawer-toggle').checked = true"
		hx-target="#drawer"
		hx-get={ "/make/" + kind.String() }
	>
		Create { kind.String() }
	</button>
}
