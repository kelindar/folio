package blocks

import (
	"fmt"
	"github.com/kelindar/folio/example/render"
	"reflect"
	"time"
)

type TextProps struct {
	Mode        render.Mode
	Name        string
	Placeholder string `default:"Please enter a value..."`
	Value       reflect.Value
}

templ TextEdit(props TextProps) {
	switch props.Mode {
		case render.ModeView :
			<p id={ props.Name }>{ props.Value.String() }</p>
		case render.ModeEdit, render.ModeCreate:
			<input
				type="text"
				id={ props.Name }
				name={ props.Name }
				class="block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
				placeholder={ props.Placeholder }
				value={ props.Value.String() }
			/>
	}
}

templ NumberEdit(props TextProps) {
	switch props.Mode {
		case render.ModeView :
			<p id={ props.Name }>{ fmt.Sprintf("%v", props.Value.Interface()) }</p>
		case render.ModeEdit, render.ModeCreate:
			<input
				type="number"
				id={ props.Name }
				name={ props.Name }
				class="block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
				placeholder={ props.Placeholder }
				value={ fmt.Sprintf("%v", props.Value.Interface()) }
			/>
	}
}

templ BoolEdit(props TextProps) {
	switch props.Mode {
		case render.ModeView :
			<p id={ props.Name }>{ fmt.Sprintf("%v", props.Value.Bool()) }</p>
		case render.ModeEdit, render.ModeCreate:
			<input
				type="checkbox"
				id={ props.Name }
				name={ props.Name }
				value={ fmt.Sprintf("%v", props.Value.Bool()) }
				if props.Value.Bool() {
					checked
				}
			/>
	}
}

templ timedAt(user string, at time.Time) {
	<p>{ fmt.Sprintf("%v, %v", titleCase(user), since(at)) }</p>
}
